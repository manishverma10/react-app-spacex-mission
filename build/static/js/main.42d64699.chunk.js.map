{"version":3,"sources":["component/Header.jsx","component/Footer.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","Navbar","expand","variant","bg","Container","Brand","href","className","React","Component","style","backgroundColor","borderTop","textAlign","padding","position","left","bottom","height","width","parentStyle","display","Footer","loaderStyle","opacity","Loader","App","hideLoader","setState","loading","showLoader","state","spaceX_data","mystate","getHundredRows","bind","this","_this","fetch","method","headers","then","res","json","response","catch","error","arg","defaulturl","arg1","arg2","arg3","getAll","console","log","getSuccessfulLand","fluid","Row","Col","xs","md","Button","onClick","onYearClick","isSuccessfulLaunch","isSuccessfulLanding","map","person","i","key","data","SpaceXDetailCard","missionInfo","props","sm","Card","Img","src","links","flickr_images","Body","Title","component","mission_name","Form","Group","as","controlId","Label","column","mission_id","launch_success","launch_year","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.42d64699.chunk.js","sourcesContent":["import React from 'react';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport Container from 'react-bootstrap/Container'\n\n\n\nclass Header extends React.Component {\n  render() {\n    return (\n        <Navbar expand=\"lg\" variant=\"light\" bg=\"light\">\n        <Container>\n          <Navbar.Brand href=\"#\" className=\"text-center font-weight-bolder\">Spacex Launch Program</Navbar.Brand>\n        </Container>\n      </Navbar>\n    );\n  }\n}\n\n\nexport default Header;","import React from 'react';\n\n\nconst style = {\n    backgroundColor: \"#F8F8F8\",\n    borderTop: \"1px solid #E7E7E7\",\n    textAlign: \"center\",\n    padding: \"20px\",\n    position: \"relative\",\n    left: \"0\",\n    bottom: \"0\",\n    height: \"60px\",\n    width: \"100%\",\n}\n\nconst parentStyle = {\n  display: 'block',\n  padding: '20px',\n  height: '60px',\n  width: '100%',\n}\n\nclass Footer extends React.Component {\nrender() {\n    return (\n        <div style={parentStyle}>\n            <footer className=\"conatainer\" style={style}>\n                <p className=\"text-center text-muted\">\n                    <b>Developed by</b> Manish Verma\n                </p>\n            </footer>\n        </div>\n  );\n}\n}\n\nexport default Footer;","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { useState,useRef, useEffect } from \"react\";\nimport {Row, Col, Card, Button, Form} from 'react-bootstrap'\nimport Header from './component/Header';\nimport Footer from './component/Footer';\n\nimport Container from 'react-bootstrap/Container'\nimport './App.css';\nimport './resources/style/sidebar.css'\n\n\nconst loaderStyle ={\n  position: 'relative',\n  width: '100%',\n  height: '100%',\n  opacity: '.5'\n}\nconst Loader = () => <div className=\"h4 text-center text-muted\" style={loaderStyle}>Loading data...</div>;\n\n class App extends Component{  \n   \n  constructor() {\n    super();\n   \n    this.state = {\n      spaceX_data: [],   \n      mystate: 1 ,\n      loading: false,\n    }\n\n    this.getHundredRows = this.getHundredRows.bind(this)\n  }\n\n\n  componentDidMount() {\n\n    this.getHundredRows();\n  }\n\n  getHundredRows(){\n\n    this.showLoader();\n    const _this = this;\n\n    const defaulturl = \"https://api.spaceXdata.com/v3/launches?limit=100\"\n    fetch(defaulturl, {\n      method: \"GET\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n     }).then(res => res.json())\n    .then(response => {\n      this.setState({spaceX_data:response})\n      _this.hideLoader();\n    })\n    .catch((error) => {\n      _this.hideLoader();\n    });\n  }\n\n  getSuccessfulLaunch(arg){\n    \n    this.showLoader();\n    const _this = this;\n\n    const defaulturl = `https://api.spacexdata.com/v3/launches?limit=100&amp;launch_success=${arg}`\n    fetch(defaulturl, {\n      method: \"GET\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n     }).then(res => res.json())\n    .then(response => {\n      this.setState({spaceX_data:response})\n      _this.hideLoader();\n    })\n    .catch((error) => {\n      _this.hideLoader();\n    });\n  }\n\n  getSuccessfulLand(arg1, arg2){\n    \n    this.showLoader();\n    const _this = this;\n\n    const defaulturl = `https://api.spacexdata.com/v3/launches?limit=100&amp;launch_success=${arg1}&amp;land_success=${arg2}`\n    fetch(defaulturl, {\n      method: \"GET\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n     }).then(res => res.json())\n    .then(response =>{\n       this.setState({spaceX_data:response})\n      _this.hideLoader();\n    })\n    .catch((error) => {\n      _this.hideLoader();\n    });\n  }\n\n  getAll(arg1, arg2, arg3){\n\n    this.showLoader();\n    const _this = this;\n\n    const defaulturl = `https://api.spacexdata.com/v3/launches?limit=100&amp;launch_success=${arg1}&amp;land_success=${arg2}&amp;launch_year=${arg3}`\n    fetch(defaulturl, {\n      method: \"GET\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n     }).then(res => res.json())\n    .then(\n      response =>{\n        this.setState({spaceX_data:response})\n        _this.hideLoader();\n      })\n    .catch((error) => {\n        _this.hideLoader();\n      });\n  }\n\n  onYearClick (arg) {\n    this.getAll(true, true, arg)\n    console.log(`data ${arg}`)\n  }\n\n  isSuccessfulLaunch(arg){\n    this.getSuccessfulLand( true, arg)\n  }\n\n  isSuccessfulLanding(arg){\n    this.getSuccessfulLand(true, arg)\n  }\n\n  hideLoader = () => {\n    this.setState({ loading: false });\n  }\n\n  showLoader = () => {\n    this.setState({ loading: true });\n  }\n\n render(){\n\n  return (\n    <div>\n    <Header />\n      <Container fluid>\n\n        {(this.state.loading) ? <Loader /> : null}\n\n          <Row className=\"mx-2\" >\n          <Col xs={12} md={3} className=\"card\">\n                    <h5 className=\"text-center text-muted mt-2\">Launch Year</h5>\n                    \n                    <Row>\n                        <Col xs={6} md={6}>\n                            <Button variant=\"success\" onClick ={() => this.onYearClick(2006)}>2006</Button>\n                        </Col>\n                        <Col xs={6} md={6}>\n                            <Button variant=\"success\" onClick={() => this.onYearClick(2007)}>2007</Button>\n                        </Col>\n                     </Row>\n\n                    <Row>\n                        <Col xs={6} md={6}>\n                            <Button variant=\"success\" onClick={() => this.onYearClick(2008)}>2008</Button>\n                        </Col>\n                        <Col xs={6} md={6}>\n                            <Button variant=\"success\" onClick={() => this.onYearClick(2009)}>2009</Button>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col xs={6} md={6}>\n                            <Button variant=\"success\" onClick={() => this.onYearClick(2010)}>2010</Button>\n                        </Col>\n                        <Col xs={6} md={6}>\n                            <Button variant=\"success\" onClick={() => this.onYearClick(2011)}>2011</Button>\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col xs={6} md={6}>\n                            <Button variant=\"success\" onClick={() => this.onYearClick(2012)}>2012</Button>\n                        </Col>\n                        <Col xs={6} md={6}>\n                            <Button variant=\"success\" onClick={() => this.onYearClick(2013)}>2013</Button>\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col xs={6} md={6}>\n                            <Button variant=\"success\" onClick={() => this.onYearClick(2014)}>2014</Button>\n                        </Col>\n                        <Col xs={6} md={6}>\n                            <Button variant=\"success\" onClick={() => this.onYearClick(2015)}>2015</Button>\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col xs={6} md={6}>\n                            <Button variant=\"success\" onClick={() => this.onYearClick(2016)}>2016</Button>\n                        </Col>\n                        <Col xs={6} md={6}>\n                            <Button variant=\"success\" onClick={() => this.onYearClick(2017)}>2017</Button>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col xs={6} md={6}>\n                            <Button variant=\"success\" onClick={() => this.onYearClick(2018)}>2018</Button>\n                        </Col>\n                        <Col xs={6} md={6}>\n                            <Button variant=\"success\" onClick={() => this.onYearClick(2019)}>2019</Button>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col xs={6} md={6}>\n                            <Button variant=\"success\" onClick={() => this.onYearClick(2020)}>2020</Button>\n                        </Col>\n                    </Row>\n                    \n                <h5 className=\"text-center text-muted mt-2\">Successful Launch</h5>\n                <Row>\n                    <Col xs={6} md={6}>\n                        <Button variant=\"success\" onClick={() => this.isSuccessfulLaunch(true)}>True</Button>\n                    </Col>\n                    <Col xs={6} md={6}>\n                        <Button variant=\"success\" onClick={() => this.isSuccessfulLaunch(false)}>False</Button>\n                    </Col>\n                </Row>\n\n                <h5 className=\"text-center text-muted mt-2\">Successful Landing</h5>\n                <Row>\n                    <Col xs={6} md={6}>\n                        <Button variant=\"success\" onClick={() => this.isSuccessfulLanding(true)}>True</Button>\n                    </Col>\n                    <Col xs={6} md={6}>\n                        <Button variant=\"success\" onClick={() => this.isSuccessfulLanding(false)}>False</Button>\n                    </Col>\n                </Row>\n\n                </Col>\n             \n              <Col xs={12} md={9}>\n                 <Row>\n                 {this.state.spaceX_data.map((person, i) => <SpaceXDetailCard key = {i} \n                    data = {person} \n                  />)}\n                 </Row>\n              </Col> \n          </Row>\n\n      </Container>\n    <Footer />\n  </div>\n  );\n }\n}\n\n\nclass SpaceXDetailCard extends Component {\n  \nrender(){\n  let missionInfo= this.props.data;\n\n  return(\n        <Col xs={12} sm={6} md={3} className=\"cardSection\">\n        <Card>\n        <Card.Img variant=\"top\" src={missionInfo.links.flickr_images[0]} />\n          <Card.Body>\n            <Card.Title component={'span'}><a href=\"#\">{missionInfo.mission_name}</a></Card.Title>\n                      \n            <Form.Group as={Row} controlId=\"formPlaintextEmail\" component={'span'}>\n              <Form.Label column sm=\"8\">\n                Successful Landing\n              </Form.Label>\n              <Col sm=\"4\">\n                <a href=\"#\">{missionInfo.mission_id}</a>\n              </Col>\n              <Form.Label column sm=\"8\">\n                Successful Launch\n              </Form.Label>\n              <Col sm=\"4\">\n                <a href=\"#\">{missionInfo.launch_success}</a>\n              </Col>\n              <Form.Label column sm=\"8\">\n                Launch Year\n              </Form.Label>\n              <Col sm=\"4\">\n                <a href=\"#\">{missionInfo.launch_year}</a>\n              </Col>\n              </Form.Group>\n\n          \n          </Card.Body>\n        </Card>\n      </Col>\n\n  );\n}\n  \n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}